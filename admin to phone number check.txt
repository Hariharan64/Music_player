
To create an Android application that allows users to enter their phone number, receive an OTP for verification, and then open MainActivity2 where employee data can be retrieved from Firestore and stored in another collection, follow these steps.

1. LoginPhoneNumberActivity.java
This activity allows the user to input their phone number and sends an OTP for verification.

java
Copy code
package com.example.qrstaff;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthOptions;
import com.google.firebase.auth.PhoneAuthProvider;
import com.hbb20.CountryCodePicker;

import java.util.concurrent.TimeUnit;

public class LoginPhoneNumberActivity extends AppCompatActivity {

    CountryCodePicker countryCodePicker;
    EditText phoneInput;
    Button sendOtpBtn;
    ProgressBar progressBar;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login_phone_number);

        countryCodePicker = findViewById(R.id.login_countrycode);
        phoneInput = findViewById(R.id.editTextEmployeeName);
        sendOtpBtn = findViewById(R.id.send_otp_btn);
        progressBar = findViewById(R.id.login_progress_bar);

        progressBar.setVisibility(View.GONE);

        countryCodePicker.registerCarrierNumberEditText(phoneInput);
        sendOtpBtn.setOnClickListener(v -> {
            if (!countryCodePicker.isValidFullNumber()) {
                phoneInput.setError("Phone number not valid");
                return;
            }

            progressBar.setVisibility(View.VISIBLE);
            String phoneNumber = countryCodePicker.getFullNumberWithPlus();

            // Send OTP
            sendVerificationCode(phoneNumber);
        });
    }

    private void sendVerificationCode(String phoneNumber) {
        PhoneAuthOptions options = PhoneAuthOptions.newBuilder(FirebaseAuth.getInstance())
                .setPhoneNumber(phoneNumber)
                .setTimeout(60L, TimeUnit.SECONDS)
                .setActivity(this)
                .setCallbacks(new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
                    @Override
                    public void onVerificationCompleted(PhoneAuthCredential credential) {
                        progressBar.setVisibility(View.GONE);
                    }

                    @Override
                    public void onVerificationFailed(FirebaseException e) {
                        progressBar.setVisibility(View.GONE);
                        Toast.makeText(LoginPhoneNumberActivity.this, "Verification Failed", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onCodeSent(String verificationId, PhoneAuthProvider.ForceResendingToken token) {
                        progressBar.setVisibility(View.GONE);
                        Intent intent = new Intent(LoginPhoneNumberActivity.this, LoginOtpActivity.class);
                        intent.putExtra("phone", phoneNumber);
                        intent.putExtra("verificationId", verificationId);
                        startActivity(intent);
                    }
                })
                .build();
        PhoneAuthProvider.verifyPhoneNumber(options);
    }
}
2. LoginOtpActivity.java
This activity handles the OTP verification and if successful, opens MainActivity2.

java
Copy code
package com.example.qrstaff;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;

public class LoginOtpActivity extends AppCompatActivity {

    EditText otpInput;
    Button verifyOtpBtn;
    ProgressBar progressBar;

    private String verificationId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login_otp);

        otpInput = findViewById(R.id.otp_input);
        verifyOtpBtn = findViewById(R.id.verify_otp_btn);
        progressBar = findViewById(R.id.otp_progress_bar);

        verificationId = getIntent().getStringExtra("verificationId");

        verifyOtpBtn.setOnClickListener(v -> {
            String code = otpInput.getText().toString().trim();
            if (code.isEmpty() || code.length() < 6) {
                otpInput.setError("Enter valid OTP");
                return;
            }
            progressBar.setVisibility(View.VISIBLE);
            verifyCode(code);
        });
    }

    private void verifyCode(String code) {
        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verificationId, code);
        signInWithCredential(credential);
    }

    private void signInWithCredential(PhoneAuthCredential credential) {
        FirebaseAuth.getInstance().signInWithCredential(credential)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        Intent intent = new Intent(LoginOtpActivity.this, MainActivity2.class);
                        startActivity(intent);
                        finish();
                    } else {
                        Toast.makeText(LoginOtpActivity.this, "Verification Failed", Toast.LENGTH_SHORT).show();
                    }
                    progressBar.setVisibility(View.GONE);
                });
    }
}
3. MainActivity2.java
This activity retrieves the employee data from Firestore and stores it in another collection.

java
Copy code
package com.example.qrstaff;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.firestore.FirebaseFirestore;

public class MainActivity2 extends AppCompatActivity {

    private EditText etEmployeeNo;
    private Button btnRetrieveEmployee;
    private TextView tvEmployeeDetails;
    private FirebaseFirestore db;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);

        // Initialize Firestore
        db = FirebaseFirestore.getInstance();

        // Initialize UI elements
        etEmployeeNo = findViewById(R.id.et_employee_no);
        btnRetrieveEmployee = findViewById(R.id.btn_retrieve_employee);
        tvEmployeeDetails = findViewById(R.id.tv_employee_details);

        // Set onClickListener for the Retrieve Employee button
        btnRetrieveEmployee.setOnClickListener(v -> retrieveEmployee());
    }

    private void retrieveEmployee() {
        String employeeNo = etEmployeeNo.getText().toString().trim();

        if (TextUtils.isEmpty(employeeNo)) {
            Toast.makeText(this, "Please enter Employee Number", Toast.LENGTH_SHORT).show();
            return;
        }

        // Retrieve the employee document from Firestore using employee number as document ID
        db.collection("employees")
                .document(employeeNo)
                .get()
                .addOnSuccessListener(documentSnapshot -> {
                    if (documentSnapshot.exists()) {
                        // Extract employee details from the document
                        Employee employee = documentSnapshot.toObject(Employee.class);

                        if (employee != null) {
                            String details = "Name: " + employee.getName() + "\n" +
                                    "Number: " + employee.getNumber() + "\n" +
                                    "Designation: " + employee.getDesignation() + "\n" +
                                    "Phone: " + employee.getPhone();
                            tvEmployeeDetails.setText(details);

                            // Store the retrieved data in another collection
                            storeEmployeeDataInAnotherCollection(employee);
                        }
                    } else {
                        Toast.makeText(MainActivity2.this, "Employee not found", Toast.LENGTH_SHORT).show();
                    }
                })
                .addOnFailureListener(e -> Toast.makeText(MainActivity2.this, "Failed to retrieve employee data", Toast.LENGTH_SHORT).show());
    }

    private void storeEmployeeDataInAnotherCollection(Employee employee) {
        // Example: Storing retrieved employee data in a "verifiedEmployees" collection
        db.collection("verifiedEmployees")
                .document(employee.getNumber()) // Use the employee number as the document ID
                .set(employee)
                .addOnSuccessListener(aVoid -> Toast.makeText(MainActivity2.this, "Employee data stored in verifiedEmployees", Toast.LENGTH_SHORT).show())
                .addOnFailureListener(e -> Toast.makeText(MainActivity2.this, "Failed to store employee data", Toast.LENGTH_SHORT).show());
    }
}
4. Employee.java
A model class for the Employee object.

java
Copy code
package com.example.qrstaff;

public class Employee {
    private String name;
    private String number;
    private String designation;
    private String phone;

    public Employee() {
        // Required empty constructor for Firebase
    }

    public Employee(String name, String number, String designation, String phone) {
        this.name = name;
        this.number = number;
        this.designation = designation;
        this.phone = phone;
    }

    // Getters and setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
    }

    public String getDesignation() {
        return designation;
    }

    public void setDesignation(String designation) {
        this.designation = designation;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
}
Summary
LoginPhoneNumberActivity: Handles phone number input and sends OTP.
LoginOtpActivity: Verifies the OTP


++++++++++++++++++++++++
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if true;
    }
  }
}

++++++++++++++++++++++++++++

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/et_employee_no"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:hint="Enter Employee Number"/>

    <Button
        android:id="@+id/btn_retrieve_employee"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Retrieve Employee"/>
    <Button
        android:id="@+id/btn"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        />

    <TextView
        android:id="@+id/tv_employee_details"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"

        android:text="Employee Details will appear here"
        android:paddingTop="16dp"/>
</LinearLayout>
